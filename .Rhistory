fill = colorVec[fem])
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
plotData
plotData[c("Genotype")]
plotData[c("Genotype", "NOX")]
plotData[c("Genotype", "Sex", "Gravity", "NOX")]
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
par("mar")
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
ctData
rawData
dayAv
source('~/FlyLab2019/climbing.R')
dayAverages
write.csv(dayAverages, file = "../../Downloads/dayAverages.csv")
source('~/FlyLab2019/qPCR.R')
cbind(rawData)
cbind(rawData[[c(1:9)]])
raw2 <- data.frame(rawData[[1]])
for (i in 2:9) raw2 <- cbind(raw2, rawData[[i]])
raw2
raw2$Sample
raw2["Sample"]
raw2[c(0:8)*3 + 1]
raw2 <- raw2[c(0:8)*3 + 1]
raw2
apply(X = raw2, MARGIN = 1, FUN = function(x) {
paste(unique(x), "//")
})
unlist(apply(X = raw2, MARGIN = 1, FUN = function(x) {
paste(unique(x), "//")
}))
as.data.frame(unlist(apply(X = raw2, MARGIN = 1, FUN = function(x) {
paste(unique(x), "//")
})))
apply(X = raw2, MARGIN = 1, FUN = function(x) {
paste(unique(x), "//")
})
apply(X = raw2, MARGIN = 1, FUN = function(x) {
paste(unique(x), "//", collapse = "")
})
apply(X = raw2, MARGIN = 1, FUN = function(x) {
paste(unique(x), "//")
})
lapply(X = apply(X = raw2, MARGIN = 1, FUN = function(x) {
paste(unique(x), "//")
}),
FUN = function(x) {if (length(x) > 1) print(x)})
rawData
source('~/FlyLab2019/climbing.R')
debugSource('~/FlyLab2019/climbing.R')
plotVar
help
plotVar
source('~/FlyLab2019/climbing.R')
plotVar
plotAverages
errorPlot(x = 1, y = plotAverages$Day1, col = rainbow(8), stdev = sqrt(plotVar))
errorPlot(x = 1, y = plotAverages$Day1, col = rainbow(8), stdev = sqrt(plotVar), rows = 1)
errorPlot(x = 1, y = plotAverages$Day1, col = rainbow(8), stdev = sqrt(plotVar), rows = 8)
errorPlot(x = 1, y = plotAverages$Day1, col = rainbow(8), stdev = sqrt(plotVar), rows = 1:8)
errorPlot(x = 1, y = plotAverages[,1], col = rainbow(8), stdev = sqrt(plotVar))
errorPlot(x = 1, y = plotAverages[,1], col = rainbow(8), stdev = sqrt(plotVar), rows = 1)
errorPlot(x = 1, y = plotAverages[,1], col = rainbow(8), stdev = sqrt(plotVar), rows = 1:8)
plot(x = 1, y = plotAverages[,1], col = rainbow(8)[1])
plot(x = 1, y = plotAverages$Day1, col = rainbow(8)[1])
plot(x = rep(1), y = plotAverages$Day1, col = rainbow(8)[1])
plot(x = rep(1, times = 8), y = plotAverages$Day1, col = rainbow(8)[1])
plot(x = rep(1, times = 8), y = plotAverages$Day1, col = rainbow(8))
plot(x = rep(1, times = 8), y = plotAverages$Day1, col = rainbow(8), ylim = c(0,1))
legend(rownames(plotAverages))
legend(x = "bottomleft", legend = rownames(plotAverages), fill = rainbow(8))
plot(x = rep(1, times = 8), y = plotAverages$Day1, col = topo.colors(8), ylim = c(0,1))
legend(x = "bottomleft", legend = rownames(plotAverages), fill = topo.colors(8))
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
#*Acclimatization ----
barplot(height = plotAverages$Days6to10)
#*Acclimatization ----
barplot(height = plotAverages$Days6to10, names.arg = rownames(plotAverages))
#*Acclimatization ----
barplot(height = plotAverages$Days6to10, names.arg = rownames(plotAverages),
las = 2)
omar <- par("mar")
par(mar = c(7.6, omar[-1]))
barplot(height = plotAverages$Days6to10, names.arg = rownames(plotAverages),
las = 2, col = rainbow(8))
par(mar = omar
barplot(height = plotAverages$Days6to10, names.arg = rownames(plotAverages),
las = 2, col = rainbow(8, s = 0.5))
omar <- par("mar")
par(mar = c(7.6, omar[-1]))
barplot(height = plotAverages$Days6to10, names.arg = rownames(plotAverages),
las = 2, col = rainbow(8, s = 0.5))
par(mar = omar)
n1 <- barplot(height = plotAverages$Days6to10, names.arg = rownames(plotAverages),
las = 2, col = rainbow(8, s = 0.5))
n1
arrows(x0 = n1, y0 = plotAverages$Days6to10, angle = 90, length = 0.1,
y1 = plotAverages$Days6to10 + sqrt(plotVar$Days6to10))
plotAverages
seq(from = 1, to = 7, by = 2)
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
plotAverages
debugSource('~/FlyLab2019/climbing.R')
plotAverages
plotAverages
source('~/FlyLab2019/climbing.R')
plotAverages
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
dayAverages
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
n1 <- barplot(height = plotAverages$Days6, names.arg = rownames(plotAverages),
las = 2, col = rainbow(4, s = 0.5), ylab = "Proportion Passed",
main = "Climbing Assay, Day 6", ylim = c(0,1))
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
plotVar
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
plotVar
source('~/FlyLab2019/climbing.R')
legend(x = "bottomleft", legend = paste0(rownames(plotAverages), "g"),
fill = colorVec)
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
plotAverages
source('~/FlyLab2019/climbing.R')
plotAverages
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/climbing.R')
source('~/FlyLab2019/qPCR.R')
rawData
rawData[,,1]
rawData[,1]
rawData[[[,1]
rawData[[]][,1]
rawData[[1]][,1]
source('~/FlyLab2019/qPCR.R')
head(rawD)
head(rawData)
length(rawData)
length(1:48)
length(49:96)
source('~/FlyLab2019/qPCR.R')
geneData
source('~/FlyLab2019/qPCR.R')
geneData
names(geneData)
names(geneData) <- 1:18
geneData
source('~/FlyLab2019/qPCR.R')
geneData
source('~/FlyLab2019/qPCR.R')
geneData
sampleFrame <- data.frame("Sample", "No")
sampleFrame
sampleFrame <- data.frame("Sample" = c(), "No" = c())
sampleFrame
sampleFrame <- data.frame("Sample" = NULL, "No" = NULL)
sampleFrame
rbind(sampleFrame, data.frame("Sample" = "abc", "No" = 1))
sampleFrame
source('~/FlyLab2019/qPCR.R')
geneData
geneData[[18]][order(geneData[[18]]$Sample),]
source('~/FlyLab2019/qPCR.R')
geneData[[18]][order(geneData[[18]]$Sample),]
names(geneData)
source('~/FlyLab2019/qPCR.R')
masterSample
sort(mastS)
sort(masterSample)
source('~/FlyLab2019/qPCR.R')
sort(masterSample)
source('~/FlyLab2019/qPCR.R')
sort(masterSample)
geneData[[18]]
geneData[[18]][order(geneData[[18]]$Sample),]
source('~/FlyLab2019/qPCR.R')
sort(masterSample)
data.frame(sort(masterSample))
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
data.frame(sort(masterSample))
fileVec
geneData
geneData
which(1:10 == "lol")
exists(which(1:10 == "lol"))
geneData[[j]]$CT[geneData[[j]]$Sample == "lol"]
n <- geneData[[j]]$CT[geneData[[j]]$Sample == "lol"]
n
length(n)
sampleFrame
sampleFrame["Test"][1] <- 3
sampleFrame["Test"][1,] <- 3
names(geneData)
names(geneData)[j]
source('~/FlyLab2019/qPCR.R')
ctData
masterSample
names(geneData)
geneData[[2]]
source('~/FlyLab2019/qPCR.R')
ctData
ctData[ctData$Sex == "M" & ctData$Gravity == 1.2, ]
n <- "ABC"
substr(x = n, start = nchar(n) - 1, stop = nchar(n))
substr(x = n, start = nchar(n), stop = nchar(n))
n <- "TH/SOD2_M_1.2g 3"
substr(x = n, start = nchar(n), stop = nchar(n))
source('~/FlyLab2019/qPCR.R')
ctData
ctData[c("Sample", "Subset")]
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
plotData
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
plotData$Subset
dct.GAPDHnew
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
ctData
dct.GAPDHnew
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
ctData
ctData[ctData$Sample == "TH/SOD2_M_1.2g 1"]
ctData[ctData$Sample == "TH/SOD2_M_1.2g 1",]
subset(ctData,
ctData$Gravity != 1.2
| ctData$Sex != "M"
| ctData$Genotype != "TH/SOD2"
| ctData$Subset != 1)
source('~/FlyLab2019/qPCR.R')
ctData
source('~/FlyLab2019/qPCR.R')
dct.GAPDHnew
columnCompare
ctData
ctData[c(columnCompare),]
ctData[,(columnCompare)]
source('~/FlyLab2019/qPCR.R')
ctData
source('~/FlyLab2019/qPCR.R')
ctData
dev.off()
source('~/FlyLab2019/qPCR.R')
ctData
source('~/FlyLab2019/qPCR.R')
plotData
write.csv(x = ctData, file = "../../Downloads/ctData.csv")
source('~/FlyLab2019/qPCR.R')
plotData
plotData[4,]
cbind(1:nrow(plotData), plotData)
barplot(plotData$SOD2, names.arg = paste0(plotData$Genotype, " ",
plotData$Sex, " ",
plotData$Gravity, "g",
" ", plotData$Subset),
main = "SOD2 Relative mRNA Expression", las = 2)
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
par("mar")
par(mar = c(7.6, omar[-1]))
barplot(plotData$SOD2, names.arg = paste0(plotData$Genotype, " ",
plotData$Sex, " ",
plotData$Gravity, "g",
" ", plotData$Subset),
main = "SOD2 Relative mRNA Expression", las = 2)
par(mar = omar)
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
cbind(1:nrow(plotData), plotData)
source('~/FlyLab2019/qPCR.R')
newPlotData
source('~/FlyLab2019/qPCR.R')
newPlotData$Group <- paste(newPlotData$Genotype,
newPlotData$Gravity,
newPlotData$Sex)
newPlotData
by(data = newPlotData, INDICES = factor(newPlotData$Group), FUN = mean)
by(data = newPlotData, INDICES = factor(newPlotData$Group), FUN = mean, na.rm = TRUE)
warnings()
by(data = newPlotData$SOD2, INDICES = factor(newPlotData$Group), FUN = mean, na.rm = TRUE)
source('~/FlyLab2019/qPCR.R')
newPlotData
typeof(newPlotData)
names(newPlotData)
barplot(newPlotData[order(names(newPlotData))])
newPlotData[order(names(newPlotData))]
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
avgData
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
newPlotData[newPlotData$Sex == "M" & newPlotData$Gravity == 1.2,]
newPlotData[newPlotData$Sex == "M" & newPlotData$Gravity == 1.2,"SOD2"]
source('~/FlyLab2019/qPCR.R')
newPlotData[newPlotData$Sex == "F" & newPlotData$Gravity == 1.2,]
newPlotData[newPlotData$Sex == "F" & newPlotData$Gravity == 1,]
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
n <- barplot(avgData$Average, names.arg = avgData$Sample, col = rainbow(3, s=0.5),
main = "SOD2 Relative mRNA Expression", las = 2, ylim = c(0,5))
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
ddct.GAPDHnew
cbind(1:nrow(ddct.GAPDHnew), ddct.GAPDHnew)
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
ddct.GAPDHnew
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
columnCompare
ctData
ddct.GAPDHnew
source('~/FlyLab2019/qPCR.R')
write.csv(x = ddct.GAPDHnew, file = "../../Downloads/ddct.csv")
ddct.GAPDHnew[order(ddct.GAPDHnew$Gravity, ddct.GAPDHnew$Sex, ddct.GAPDHnew$Genotype)]
ddct.GAPDHnew[order(ddct.GAPDHnew$Gravity, ddct.GAPDHnew$Sex, ddct.GAPDHnew$Genotype),]
ddct.GAPDHnew[order(ddct.GAPDHnew$Genotype, ddct.GAPDHnew$Gravity, ddct.GAPDHnew$Sex),]
write.csv(x = ddct.GAPDHnew[order(ddct.GAPDHnew$Genotype, ddct.GAPDHnew$Gravity, ddct.GAPDHnew$Sex),], file = "../../Downloads/ddct.csv"
)
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
write.csv(x = ddct.GAPDHnew[order(ddct.GAPDHnew$Genotype, ddct.GAPDHnew$Gravity, ddct.GAPDHnew$Sex),], file = "../../Downloads/ddct.csv"
)
write.csv(x = ddct.GAPDHnew[order(ddct.GAPDHnew$Genotype, ddct.GAPDHnew$Gravity, ddct.GAPDHnew$Sex),], file = "../../Downloads/ddct.csv")
newPlotData
newPlotData[c("Group", "SOD2")]
paste(substr(directoryName, start = 1, stop = nchar(directoryName)-2))
paste(substr(directoryName, start = 1, stop = nchar(directoryName)-3))
#Heatmaps ----
directoryName <- paste(substr(directoryName, start = 1, stop = nchar(directoryName)-3))
oxidative <- read.csv(file = paste0(directoryName, "Oxidative.csv"))
oxidative
oxidative <- read.csv(file = paste0(directoryName, "Oxidative.csv"),
row.names = 1)
oxidative
colnames(oxidative) <- c(colnames(oxidative)[1:2], "DmDRP", colnames(oxidative)[4:8])
colnames(oxidative) <- c(colnames(oxidative)[1:2], "DmDRP", colnames(oxidative)[4:7])
oxidative
heatmap(x = oxidative)
heatmap(x = as.matrix(oxidative))
heatmap(x = as.matrix(oxidative), Rowv = NA, Colv = NA)
heatmap(x = as.matrix(oxidative), Rowv = NA, Colv = NA, verbose = TRUE)
oxidative <- scale(as.numeric(oxidative))
oxidative <- scale(as.matrix(oxidative))
heatmap(x = as.matrix(oxidative), Rowv = NA, Colv = NA, verbose = TRUE)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
oxidative
source('~/.active-rstudio-document')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
heatmap(x = oxidative, Rowv = NA, Colv = NA, col = topo.colors(100, alpha = 0.7))
levelplot(oxidative, col.regions = topo.colors)
install.packages("lattice")
library(lattice)
levelplot(oxidative)
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
levelplot(as.matrix(oxidative))
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
levelplot(as.matrix(oxidative))
levelplot(t(as.matrix(oxidative)))
levelplot(t(as.matrix(oxidative)), xlab = "Gene")
levelplot(t(as.matrix(oxidative)), xlab = "Gene", ylab = "Group")
levelplot(t(as.matrix(oxidative)), xlab = "Gene", row.values = c(1,2,3,4))
levelplot(t(as.matrix(oxidative)), xlab = "Gene", col.values = c(1,2,3,4))
levelplot(t(as.matrix(oxidative)), xlab = "Gene", col.values = c(1,2,3,4))
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
mtext(text = "Relative Expression (Normalized)", side = 4)
mtext(text = "Relative Expression (Normalized)", side = 4, line = 1)
mtext(text = "Relative Expression (Normalized)", side = 4, line = 1)
require("lattice")
colnames(oxidative) <- c(colnames(oxidative)[1:2], "DmDRP", colnames(oxidative)[4:7])
require("lattice")
print(levelplot(t(as.matrix(oxidative)), xlab = "Gene", ylab = ""))
mtext(text = "Relative Expression (Normalized)", side = 4, line = 1)
mtext(text = "Relative Expression (Normalized)", side = 4, line = 3)
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
mtext(text = "Relative Expression (Normalized)", side = 4)
mtext(text = "Relative Expression (Normalized)", side = 4)
source('~/FlyLab2019/qPCR.R')
dev.off()
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
par("mar")
source('~/FlyLab2019/qPCR.R')
print(levelplot(t(as.matrix(oxidative)), xlab = "Gene", ylab = "",
par.settings = list(layout.heights = list(right.padding=2))))
dev.off
dev.off()
print(levelplot(t(as.matrix(oxidative)), xlab = "Gene", ylab = "",
par.settings = list(layout.heights = list(right.padding=2))))
mtext(text = "Relative Expression (Normalized)", side = 4)
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
plot.new()
dev.off()
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
mtext(text = "Relative Expression (Normalized)", side = 4)
mtext(text = "Relative Expression (Normalized)", side = 4)
source('~/FlyLab2019/qPCR.R')
print(levelplot(t(as.matrix(oxidative)), xlab = "Gene", ylab = "",
col.regions = heat.colors))
col.regions = rev(heat.colors))
print(levelplot(t(as.matrix(oxidative)), xlab = "Gene", ylab = "",
col.regions = rev(heat.colors)))
print(levelplot(t(as.matrix(oxidative)), xlab = "Gene", ylab = "",
col.regions = heat.colors(10)))
print(levelplot(t(as.matrix(oxidative)), xlab = "Gene", ylab = "",
col.regions = heat.colors(200)))
print(levelplot(t(as.matrix(oxidative)), xlab = "Gene", ylab = "",
col.regions = rev(heat.colors(200))))
downstream <- read.csv(file = paste0(directoryName, "Downstream.csv"),
row.names = 1)
downstream
downstream <- read.csv(file = paste0(directoryName, "Downstream.csv"),
row.names = 1)
downstream
print(levelplot(oxidative, xlab = "Gene", ylab = "",
col.regions = rev(heat.colors(200))))
oxidative <- read.csv(file = paste0(directoryName, "Oxidative.csv"),
row.names = 1)
oxidative <- t(scale(as.matrix(oxidative)))
colnames(oxidative) <- c(colnames(oxidative)[1:2], "DmDRP",
colnames(oxidative)[4:7])
require("lattice")
print(levelplot(oxidative, xlab = "Gene", ylab = "",
col.regions = rev(heat.colors(200))))
colnames(oxidative) <- c(colnames(oxidative)[1:2], "DmDRP",
colnames(oxidative)[4:7])
#Heatmaps ----
directoryName <- paste(substr(directoryName,
start = 1,
stop = nchar(directoryName)-3))
oxidative <- read.csv(file = paste0(directoryName, "Oxidative.csv"),
row.names = 1)
source('~/FlyLab2019/qPCR.R')
colnames(oxidative)
source('~/FlyLab2019/qPCR.R')
downstream
print(levelplot(downstream, xlab = "Gene", ylab = "",
col.regions = rev(heat.colors(200))))
source('~/FlyLab2019/qPCR.R')
source('~/FlyLab2019/qPCR.R')
par(family)
par()
par(font.main)
par(font)
par("font")
par("font.main")
str(par())
